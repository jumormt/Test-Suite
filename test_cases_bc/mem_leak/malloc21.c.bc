; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/mem_leak/malloc21.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/malloc21.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FOO = type { ptr, ptr, ptr }

@.str = private unnamed_addr constant [9 x i8] c"%d,%d,%d\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEMALLOC(i32 noundef %n) #0 !dbg !11 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !17, metadata !DIExpression()), !dbg !18
  %0 = load i32, ptr %n.addr, align 4, !dbg !19
  %conv = sext i32 %0 to i64, !dbg !19
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !20
  ret ptr %call, !dbg !21
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local noalias ptr @malloc(i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKMALLOC(i32 noundef %n) #0 !dbg !22 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, ptr %n.addr, align 4, !dbg !25
  %conv = sext i32 %0 to i64, !dbg !25
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !26
  ret ptr %call, !dbg !27
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRMALLOC(i32 noundef %n) #0 !dbg !28 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !29, metadata !DIExpression()), !dbg !30
  %0 = load i32, ptr %n.addr, align 4, !dbg !31
  %conv = sext i32 %0 to i64, !dbg !31
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !32
  ret ptr %call, !dbg !33
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @CLKMALLOC(i32 noundef %n) #0 !dbg !34 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !35, metadata !DIExpression()), !dbg !36
  %0 = load i32, ptr %n.addr, align 4, !dbg !37
  %conv = sext i32 %0 to i64, !dbg !37
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !38
  ret ptr %call, !dbg !39
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRLEAKFP(i32 noundef %n) #0 !dbg !40 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !41, metadata !DIExpression()), !dbg !42
  %0 = load i32, ptr %n.addr, align 4, !dbg !43
  %conv = sext i32 %0 to i64, !dbg !43
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !44
  ret ptr %call, !dbg !45
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKLEAKFP(i32 noundef %n) #0 !dbg !46 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !47, metadata !DIExpression()), !dbg !48
  %0 = load i32, ptr %n.addr, align 4, !dbg !49
  %conv = sext i32 %0 to i64, !dbg !49
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !50
  ret ptr %call, !dbg !51
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @LEAKFN(i32 noundef %n) #0 !dbg !52 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !53, metadata !DIExpression()), !dbg !54
  %0 = load i32, ptr %n.addr, align 4, !dbg !55
  %conv = sext i32 %0 to i64, !dbg !55
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !56
  ret ptr %call, !dbg !57
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @getfree(ptr noundef %net) #0 !dbg !58 {
entry:
  %net.addr = alloca ptr, align 8
  store ptr %net, ptr %net.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %net.addr, metadata !69, metadata !DIExpression()), !dbg !70
  %0 = load ptr, ptr %net.addr, align 8, !dbg !71
  %f1 = getelementptr inbounds %struct.FOO, ptr %0, i32 0, i32 0, !dbg !72
  %1 = load ptr, ptr %f1, align 8, !dbg !72
  call void @free(ptr noundef %1) #4, !dbg !73
  %2 = load ptr, ptr %net.addr, align 8, !dbg !74
  %f2 = getelementptr inbounds %struct.FOO, ptr %2, i32 0, i32 1, !dbg !75
  %3 = load ptr, ptr %f2, align 8, !dbg !75
  call void @free(ptr noundef %3) #4, !dbg !76
  %4 = load ptr, ptr %net.addr, align 8, !dbg !77
  %f3 = getelementptr inbounds %struct.FOO, ptr %4, i32 0, i32 2, !dbg !78
  %5 = load ptr, ptr %f3, align 8, !dbg !78
  call void @free(ptr noundef %5) #4, !dbg !79
  ret void, !dbg !80
}

; Function Attrs: nounwind
declare dso_local void @free(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @readmin() #0 !dbg !81 {
entry:
  %net1 = alloca %struct.FOO, align 8
  call void @llvm.dbg.declare(metadata ptr %net1, metadata !84, metadata !DIExpression()), !dbg !85
  %call = call ptr @NFRMALLOC(i32 noundef 4), !dbg !86
  %f1 = getelementptr inbounds %struct.FOO, ptr %net1, i32 0, i32 0, !dbg !87
  store ptr %call, ptr %f1, align 8, !dbg !88
  %call1 = call ptr @NFRMALLOC(i32 noundef 2), !dbg !89
  %f2 = getelementptr inbounds %struct.FOO, ptr %net1, i32 0, i32 1, !dbg !90
  store ptr %call1, ptr %f2, align 8, !dbg !91
  %call2 = call ptr @NFRMALLOC(i32 noundef 3), !dbg !92
  %f3 = getelementptr inbounds %struct.FOO, ptr %net1, i32 0, i32 2, !dbg !93
  store ptr %call2, ptr %f3, align 8, !dbg !94
  %f13 = getelementptr inbounds %struct.FOO, ptr %net1, i32 0, i32 0, !dbg !95
  %0 = load ptr, ptr %f13, align 8, !dbg !95
  %f24 = getelementptr inbounds %struct.FOO, ptr %net1, i32 0, i32 1, !dbg !96
  %1 = load ptr, ptr %f24, align 8, !dbg !96
  %f35 = getelementptr inbounds %struct.FOO, ptr %net1, i32 0, i32 2, !dbg !97
  %2 = load ptr, ptr %f35, align 8, !dbg !97
  %call6 = call i32 (ptr, ...) @printf(ptr noundef getelementptr inbounds ([9 x i8], ptr @.str, i64 0, i64 0), ptr noundef %0, ptr noundef %1, ptr noundef %2), !dbg !98
  ret void, !dbg !99
}

declare dso_local i32 @printf(ptr noundef, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !100 {
entry:
  call void @readmin(), !dbg !103
  ret i32 0, !dbg !104
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7, !8, !9}
!llvm.ident = !{!10}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 14.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/malloc21.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "c83f9af6573ff6b7ab69cb0e4d4bced8")
!2 = !{!3}
!3 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!4 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!5 = !{i32 7, !"Dwarf Version", i32 5}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 7, !"uwtable", i32 1}
!9 = !{i32 7, !"frame-pointer", i32 2}
!10 = !{!"clang version 14.0.0"}
!11 = distinct !DISubprogram(name: "SAFEMALLOC", scope: !12, file: !12, line: 5, type: !13, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!12 = !DIFile(filename: "memleak_check.h", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "f78006bd129ed179fe44821c3aed9305")
!13 = !DISubroutineType(types: !14)
!14 = !{!15, !4}
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!16 = !{}
!17 = !DILocalVariable(name: "n", arg: 1, scope: !11, file: !12, line: 5, type: !4)
!18 = !DILocation(line: 5, column: 22, scope: !11)
!19 = !DILocation(line: 6, column: 17, scope: !11)
!20 = !DILocation(line: 6, column: 10, scope: !11)
!21 = !DILocation(line: 6, column: 3, scope: !11)
!22 = distinct !DISubprogram(name: "PLKMALLOC", scope: !12, file: !12, line: 9, type: !13, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!23 = !DILocalVariable(name: "n", arg: 1, scope: !22, file: !12, line: 9, type: !4)
!24 = !DILocation(line: 9, column: 21, scope: !22)
!25 = !DILocation(line: 10, column: 17, scope: !22)
!26 = !DILocation(line: 10, column: 10, scope: !22)
!27 = !DILocation(line: 10, column: 3, scope: !22)
!28 = distinct !DISubprogram(name: "NFRMALLOC", scope: !12, file: !12, line: 13, type: !13, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!29 = !DILocalVariable(name: "n", arg: 1, scope: !28, file: !12, line: 13, type: !4)
!30 = !DILocation(line: 13, column: 21, scope: !28)
!31 = !DILocation(line: 14, column: 17, scope: !28)
!32 = !DILocation(line: 14, column: 10, scope: !28)
!33 = !DILocation(line: 14, column: 3, scope: !28)
!34 = distinct !DISubprogram(name: "CLKMALLOC", scope: !12, file: !12, line: 17, type: !13, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!35 = !DILocalVariable(name: "n", arg: 1, scope: !34, file: !12, line: 17, type: !4)
!36 = !DILocation(line: 17, column: 21, scope: !34)
!37 = !DILocation(line: 18, column: 17, scope: !34)
!38 = !DILocation(line: 18, column: 10, scope: !34)
!39 = !DILocation(line: 18, column: 3, scope: !34)
!40 = distinct !DISubprogram(name: "NFRLEAKFP", scope: !12, file: !12, line: 21, type: !13, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!41 = !DILocalVariable(name: "n", arg: 1, scope: !40, file: !12, line: 21, type: !4)
!42 = !DILocation(line: 21, column: 21, scope: !40)
!43 = !DILocation(line: 22, column: 17, scope: !40)
!44 = !DILocation(line: 22, column: 10, scope: !40)
!45 = !DILocation(line: 22, column: 3, scope: !40)
!46 = distinct !DISubprogram(name: "PLKLEAKFP", scope: !12, file: !12, line: 25, type: !13, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!47 = !DILocalVariable(name: "n", arg: 1, scope: !46, file: !12, line: 25, type: !4)
!48 = !DILocation(line: 25, column: 21, scope: !46)
!49 = !DILocation(line: 26, column: 17, scope: !46)
!50 = !DILocation(line: 26, column: 10, scope: !46)
!51 = !DILocation(line: 26, column: 3, scope: !46)
!52 = distinct !DISubprogram(name: "LEAKFN", scope: !12, file: !12, line: 29, type: !13, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!53 = !DILocalVariable(name: "n", arg: 1, scope: !52, file: !12, line: 29, type: !4)
!54 = !DILocation(line: 29, column: 18, scope: !52)
!55 = !DILocation(line: 30, column: 17, scope: !52)
!56 = !DILocation(line: 30, column: 10, scope: !52)
!57 = !DILocation(line: 30, column: 3, scope: !52)
!58 = distinct !DISubprogram(name: "getfree", scope: !59, file: !59, line: 18, type: !60, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!59 = !DIFile(filename: "src/mem_leak/malloc21.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "c83f9af6573ff6b7ab69cb0e4d4bced8")
!60 = !DISubroutineType(types: !61)
!61 = !{null, !62}
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "FOO", file: !59, line: 14, baseType: !64)
!64 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !59, line: 10, size: 192, elements: !65)
!65 = !{!66, !67, !68}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !64, file: !59, line: 11, baseType: !3, size: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !64, file: !59, line: 12, baseType: !3, size: 64, offset: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !64, file: !59, line: 13, baseType: !3, size: 64, offset: 128)
!69 = !DILocalVariable(name: "net", arg: 1, scope: !58, file: !59, line: 18, type: !62)
!70 = !DILocation(line: 18, column: 19, scope: !58)
!71 = !DILocation(line: 20, column: 7, scope: !58)
!72 = !DILocation(line: 20, column: 12, scope: !58)
!73 = !DILocation(line: 20, column: 2, scope: !58)
!74 = !DILocation(line: 21, column: 7, scope: !58)
!75 = !DILocation(line: 21, column: 12, scope: !58)
!76 = !DILocation(line: 21, column: 2, scope: !58)
!77 = !DILocation(line: 22, column: 7, scope: !58)
!78 = !DILocation(line: 22, column: 12, scope: !58)
!79 = !DILocation(line: 22, column: 2, scope: !58)
!80 = !DILocation(line: 23, column: 1, scope: !58)
!81 = distinct !DISubprogram(name: "readmin", scope: !59, file: !59, line: 25, type: !82, scopeLine: 25, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!82 = !DISubroutineType(types: !83)
!83 = !{null}
!84 = !DILocalVariable(name: "net1", scope: !81, file: !59, line: 26, type: !63)
!85 = !DILocation(line: 26, column: 6, scope: !81)
!86 = !DILocation(line: 27, column: 18, scope: !81)
!87 = !DILocation(line: 27, column: 7, scope: !81)
!88 = !DILocation(line: 27, column: 10, scope: !81)
!89 = !DILocation(line: 28, column: 18, scope: !81)
!90 = !DILocation(line: 28, column: 7, scope: !81)
!91 = !DILocation(line: 28, column: 10, scope: !81)
!92 = !DILocation(line: 29, column: 18, scope: !81)
!93 = !DILocation(line: 29, column: 7, scope: !81)
!94 = !DILocation(line: 29, column: 10, scope: !81)
!95 = !DILocation(line: 30, column: 25, scope: !81)
!96 = !DILocation(line: 30, column: 33, scope: !81)
!97 = !DILocation(line: 30, column: 41, scope: !81)
!98 = !DILocation(line: 30, column: 2, scope: !81)
!99 = !DILocation(line: 32, column: 1, scope: !81)
!100 = distinct !DISubprogram(name: "main", scope: !59, file: !59, line: 34, type: !101, scopeLine: 34, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!101 = !DISubroutineType(types: !102)
!102 = !{!4}
!103 = !DILocation(line: 36, column: 2, scope: !100)
!104 = !DILocation(line: 38, column: 1, scope: !100)
