; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/mem_leak/malloc18.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/malloc18.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Img = type { i32, ptr }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEMALLOC(i32 noundef %n) #0 !dbg !8 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !15, metadata !DIExpression()), !dbg !16
  %0 = load i32, ptr %n.addr, align 4, !dbg !17
  %conv = sext i32 %0 to i64, !dbg !17
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !18
  ret ptr %call, !dbg !19
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local noalias ptr @malloc(i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKMALLOC(i32 noundef %n) #0 !dbg !20 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !21, metadata !DIExpression()), !dbg !22
  %0 = load i32, ptr %n.addr, align 4, !dbg !23
  %conv = sext i32 %0 to i64, !dbg !23
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !24
  ret ptr %call, !dbg !25
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRMALLOC(i32 noundef %n) #0 !dbg !26 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !27, metadata !DIExpression()), !dbg !28
  %0 = load i32, ptr %n.addr, align 4, !dbg !29
  %conv = sext i32 %0 to i64, !dbg !29
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !30
  ret ptr %call, !dbg !31
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @CLKMALLOC(i32 noundef %n) #0 !dbg !32 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !33, metadata !DIExpression()), !dbg !34
  %0 = load i32, ptr %n.addr, align 4, !dbg !35
  %conv = sext i32 %0 to i64, !dbg !35
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !36
  ret ptr %call, !dbg !37
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRLEAKFP(i32 noundef %n) #0 !dbg !38 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !39, metadata !DIExpression()), !dbg !40
  %0 = load i32, ptr %n.addr, align 4, !dbg !41
  %conv = sext i32 %0 to i64, !dbg !41
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !42
  ret ptr %call, !dbg !43
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKLEAKFP(i32 noundef %n) #0 !dbg !44 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !45, metadata !DIExpression()), !dbg !46
  %0 = load i32, ptr %n.addr, align 4, !dbg !47
  %conv = sext i32 %0 to i64, !dbg !47
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !48
  ret ptr %call, !dbg !49
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @LEAKFN(i32 noundef %n) #0 !dbg !50 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !51, metadata !DIExpression()), !dbg !52
  %0 = load i32, ptr %n.addr, align 4, !dbg !53
  %conv = sext i32 %0 to i64, !dbg !53
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !54
  ret ptr %call, !dbg !55
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @read_color_image(ptr noundef %p) #0 !dbg !56 {
entry:
  %p.addr = alloca ptr, align 8
  %image = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !66, metadata !DIExpression()), !dbg !67
  %0 = load ptr, ptr %p.addr, align 8, !dbg !68
  store i32 100, ptr %0, align 4, !dbg !69
  call void @llvm.dbg.declare(metadata ptr %image, metadata !70, metadata !DIExpression()), !dbg !71
  %call = call ptr @SAFEMALLOC(i32 noundef 10), !dbg !72
  store ptr %call, ptr %image, align 8, !dbg !71
  %call1 = call ptr @NFRMALLOC(i32 noundef 10), !dbg !73
  %1 = load ptr, ptr %image, align 8, !dbg !74
  %data = getelementptr inbounds %struct.Img, ptr %1, i32 0, i32 1, !dbg !75
  store ptr %call1, ptr %data, align 8, !dbg !76
  %2 = load ptr, ptr %image, align 8, !dbg !77
  ret ptr %2, !dbg !78
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_image(ptr noundef %image) #0 !dbg !79 {
entry:
  %image.addr = alloca ptr, align 8
  store ptr %image, ptr %image.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %image.addr, metadata !82, metadata !DIExpression()), !dbg !83
  %0 = load ptr, ptr %image.addr, align 8, !dbg !84
  call void @free(ptr noundef %0) #3, !dbg !85
  ret void, !dbg !86
}

; Function Attrs: nounwind
declare dso_local void @free(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !87 {
entry:
  %retval = alloca i32, align 4
  %x = alloca ptr, align 8
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %image = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
  call void @llvm.dbg.declare(metadata ptr %x, metadata !90, metadata !DIExpression()), !dbg !91
  call void @llvm.dbg.declare(metadata ptr %b, metadata !92, metadata !DIExpression()), !dbg !93
  call void @llvm.dbg.declare(metadata ptr %c, metadata !94, metadata !DIExpression()), !dbg !95
  store i32 10, ptr %b, align 4, !dbg !96
  store i32 20, ptr %c, align 4, !dbg !97
  %0 = load ptr, ptr %x, align 8, !dbg !98
  %tobool = icmp ne ptr %0, null, !dbg !98
  br i1 %tobool, label %if.then, label %if.else, !dbg !100

if.then:                                          ; preds = %entry
  store ptr %b, ptr %x, align 8, !dbg !101
  br label %if.end, !dbg !102

if.else:                                          ; preds = %entry
  store ptr %c, ptr %x, align 8, !dbg !103
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.declare(metadata ptr %image, metadata !104, metadata !DIExpression()), !dbg !105
  %1 = load ptr, ptr %x, align 8, !dbg !106
  %call = call ptr @read_color_image(ptr noundef %1), !dbg !107
  store ptr %call, ptr %image, align 8, !dbg !105
  %2 = load ptr, ptr %image, align 8, !dbg !108
  call void @free_image(ptr noundef %2), !dbg !109
  %3 = load i32, ptr %retval, align 4, !dbg !110
  ret i32 %3, !dbg !110
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 14.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/malloc18.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "e51bb549c39a4d47a33e5a478142ac75")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 7, !"uwtable", i32 1}
!6 = !{i32 7, !"frame-pointer", i32 2}
!7 = !{!"clang version 14.0.0"}
!8 = distinct !DISubprogram(name: "SAFEMALLOC", scope: !9, file: !9, line: 5, type: !10, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!9 = !DIFile(filename: "memleak_check.h", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "f78006bd129ed179fe44821c3aed9305")
!10 = !DISubroutineType(types: !11)
!11 = !{!12, !13}
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!13 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!14 = !{}
!15 = !DILocalVariable(name: "n", arg: 1, scope: !8, file: !9, line: 5, type: !13)
!16 = !DILocation(line: 5, column: 22, scope: !8)
!17 = !DILocation(line: 6, column: 17, scope: !8)
!18 = !DILocation(line: 6, column: 10, scope: !8)
!19 = !DILocation(line: 6, column: 3, scope: !8)
!20 = distinct !DISubprogram(name: "PLKMALLOC", scope: !9, file: !9, line: 9, type: !10, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!21 = !DILocalVariable(name: "n", arg: 1, scope: !20, file: !9, line: 9, type: !13)
!22 = !DILocation(line: 9, column: 21, scope: !20)
!23 = !DILocation(line: 10, column: 17, scope: !20)
!24 = !DILocation(line: 10, column: 10, scope: !20)
!25 = !DILocation(line: 10, column: 3, scope: !20)
!26 = distinct !DISubprogram(name: "NFRMALLOC", scope: !9, file: !9, line: 13, type: !10, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!27 = !DILocalVariable(name: "n", arg: 1, scope: !26, file: !9, line: 13, type: !13)
!28 = !DILocation(line: 13, column: 21, scope: !26)
!29 = !DILocation(line: 14, column: 17, scope: !26)
!30 = !DILocation(line: 14, column: 10, scope: !26)
!31 = !DILocation(line: 14, column: 3, scope: !26)
!32 = distinct !DISubprogram(name: "CLKMALLOC", scope: !9, file: !9, line: 17, type: !10, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!33 = !DILocalVariable(name: "n", arg: 1, scope: !32, file: !9, line: 17, type: !13)
!34 = !DILocation(line: 17, column: 21, scope: !32)
!35 = !DILocation(line: 18, column: 17, scope: !32)
!36 = !DILocation(line: 18, column: 10, scope: !32)
!37 = !DILocation(line: 18, column: 3, scope: !32)
!38 = distinct !DISubprogram(name: "NFRLEAKFP", scope: !9, file: !9, line: 21, type: !10, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!39 = !DILocalVariable(name: "n", arg: 1, scope: !38, file: !9, line: 21, type: !13)
!40 = !DILocation(line: 21, column: 21, scope: !38)
!41 = !DILocation(line: 22, column: 17, scope: !38)
!42 = !DILocation(line: 22, column: 10, scope: !38)
!43 = !DILocation(line: 22, column: 3, scope: !38)
!44 = distinct !DISubprogram(name: "PLKLEAKFP", scope: !9, file: !9, line: 25, type: !10, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!45 = !DILocalVariable(name: "n", arg: 1, scope: !44, file: !9, line: 25, type: !13)
!46 = !DILocation(line: 25, column: 21, scope: !44)
!47 = !DILocation(line: 26, column: 17, scope: !44)
!48 = !DILocation(line: 26, column: 10, scope: !44)
!49 = !DILocation(line: 26, column: 3, scope: !44)
!50 = distinct !DISubprogram(name: "LEAKFN", scope: !9, file: !9, line: 29, type: !10, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!51 = !DILocalVariable(name: "n", arg: 1, scope: !50, file: !9, line: 29, type: !13)
!52 = !DILocation(line: 29, column: 18, scope: !50)
!53 = !DILocation(line: 30, column: 17, scope: !50)
!54 = !DILocation(line: 30, column: 10, scope: !50)
!55 = !DILocation(line: 30, column: 3, scope: !50)
!56 = distinct !DISubprogram(name: "read_color_image", scope: !57, file: !57, line: 17, type: !58, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!57 = !DIFile(filename: "src/mem_leak/malloc18.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "e51bb549c39a4d47a33e5a478142ac75")
!58 = !DISubroutineType(types: !59)
!59 = !{!60, !65}
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Img", file: !57, line: 11, size: 128, elements: !62)
!62 = !{!63, !64}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !61, file: !57, line: 12, baseType: !13, size: 32)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !61, file: !57, line: 13, baseType: !65, size: 64, offset: 64)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!66 = !DILocalVariable(name: "p", arg: 1, scope: !56, file: !57, line: 17, type: !65)
!67 = !DILocation(line: 17, column: 35, scope: !56)
!68 = !DILocation(line: 18, column: 3, scope: !56)
!69 = !DILocation(line: 18, column: 5, scope: !56)
!70 = !DILocalVariable(name: "image", scope: !56, file: !57, line: 19, type: !60)
!71 = !DILocation(line: 19, column: 14, scope: !56)
!72 = !DILocation(line: 19, column: 22, scope: !56)
!73 = !DILocation(line: 21, column: 16, scope: !56)
!74 = !DILocation(line: 21, column: 2, scope: !56)
!75 = !DILocation(line: 21, column: 9, scope: !56)
!76 = !DILocation(line: 21, column: 14, scope: !56)
!77 = !DILocation(line: 22, column: 9, scope: !56)
!78 = !DILocation(line: 22, column: 2, scope: !56)
!79 = distinct !DISubprogram(name: "free_image", scope: !57, file: !57, line: 25, type: !80, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!80 = !DISubroutineType(types: !81)
!81 = !{null, !60}
!82 = !DILocalVariable(name: "image", arg: 1, scope: !79, file: !57, line: 25, type: !60)
!83 = !DILocation(line: 25, column: 29, scope: !79)
!84 = !DILocation(line: 29, column: 7, scope: !79)
!85 = !DILocation(line: 29, column: 2, scope: !79)
!86 = !DILocation(line: 30, column: 1, scope: !79)
!87 = distinct !DISubprogram(name: "main", scope: !57, file: !57, line: 32, type: !88, scopeLine: 32, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!88 = !DISubroutineType(types: !89)
!89 = !{!13}
!90 = !DILocalVariable(name: "x", scope: !87, file: !57, line: 33, type: !65)
!91 = !DILocation(line: 33, column: 7, scope: !87)
!92 = !DILocalVariable(name: "b", scope: !87, file: !57, line: 34, type: !13)
!93 = !DILocation(line: 34, column: 6, scope: !87)
!94 = !DILocalVariable(name: "c", scope: !87, file: !57, line: 34, type: !13)
!95 = !DILocation(line: 34, column: 8, scope: !87)
!96 = !DILocation(line: 35, column: 4, scope: !87)
!97 = !DILocation(line: 36, column: 4, scope: !87)
!98 = !DILocation(line: 37, column: 5, scope: !99)
!99 = distinct !DILexicalBlock(scope: !87, file: !57, line: 37, column: 5)
!100 = !DILocation(line: 37, column: 5, scope: !87)
!101 = !DILocation(line: 38, column: 4, scope: !99)
!102 = !DILocation(line: 38, column: 2, scope: !99)
!103 = !DILocation(line: 40, column: 4, scope: !99)
!104 = !DILocalVariable(name: "image", scope: !87, file: !57, line: 41, type: !60)
!105 = !DILocation(line: 41, column: 14, scope: !87)
!106 = !DILocation(line: 41, column: 39, scope: !87)
!107 = !DILocation(line: 41, column: 22, scope: !87)
!108 = !DILocation(line: 43, column: 13, scope: !87)
!109 = !DILocation(line: 43, column: 2, scope: !87)
!110 = !DILocation(line: 46, column: 1, scope: !87)
