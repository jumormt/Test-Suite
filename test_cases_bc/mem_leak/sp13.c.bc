; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/mem_leak/sp13.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/sp13.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.List = type { i8*, i8* }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @SAFEMALLOC(i32 %n) #0 !dbg !18 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !24, metadata !DIExpression()), !dbg !25
  %0 = load i32, i32* %n.addr, align 4, !dbg !26
  %conv = sext i32 %0 to i64, !dbg !26
  %call = call noalias align 16 i8* @malloc(i64 %conv) #3, !dbg !27
  ret i8* %call, !dbg !28
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local noalias align 16 i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @PLKMALLOC(i32 %n) #0 !dbg !29 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !30, metadata !DIExpression()), !dbg !31
  %0 = load i32, i32* %n.addr, align 4, !dbg !32
  %conv = sext i32 %0 to i64, !dbg !32
  %call = call noalias align 16 i8* @malloc(i64 %conv) #3, !dbg !33
  ret i8* %call, !dbg !34
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @NFRMALLOC(i32 %n) #0 !dbg !35 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !36, metadata !DIExpression()), !dbg !37
  %0 = load i32, i32* %n.addr, align 4, !dbg !38
  %conv = sext i32 %0 to i64, !dbg !38
  %call = call noalias align 16 i8* @malloc(i64 %conv) #3, !dbg !39
  ret i8* %call, !dbg !40
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @CLKMALLOC(i32 %n) #0 !dbg !41 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !42, metadata !DIExpression()), !dbg !43
  %0 = load i32, i32* %n.addr, align 4, !dbg !44
  %conv = sext i32 %0 to i64, !dbg !44
  %call = call noalias align 16 i8* @malloc(i64 %conv) #3, !dbg !45
  ret i8* %call, !dbg !46
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @NFRLEAKFP(i32 %n) #0 !dbg !47 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !48, metadata !DIExpression()), !dbg !49
  %0 = load i32, i32* %n.addr, align 4, !dbg !50
  %conv = sext i32 %0 to i64, !dbg !50
  %call = call noalias align 16 i8* @malloc(i64 %conv) #3, !dbg !51
  ret i8* %call, !dbg !52
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @PLKLEAKFP(i32 %n) #0 !dbg !53 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !54, metadata !DIExpression()), !dbg !55
  %0 = load i32, i32* %n.addr, align 4, !dbg !56
  %conv = sext i32 %0 to i64, !dbg !56
  %call = call noalias align 16 i8* @malloc(i64 %conv) #3, !dbg !57
  ret i8* %call, !dbg !58
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @LEAKFN(i32 %n) #0 !dbg !59 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !60, metadata !DIExpression()), !dbg !61
  %0 = load i32, i32* %n.addr, align 4, !dbg !62
  %conv = sext i32 %0 to i64, !dbg !62
  %call = call noalias align 16 i8* @malloc(i64 %conv) #3, !dbg !63
  ret i8* %call, !dbg !64
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @ra(i8* %dst, i8* %src) #0 !dbg !65 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %p = alloca %struct.List*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !68, metadata !DIExpression()), !dbg !69
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !70, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.declare(metadata %struct.List** %p, metadata !72, metadata !DIExpression()), !dbg !73
  %call = call i8* @NFRMALLOC(i32 16), !dbg !74
  %0 = bitcast i8* %call to %struct.List*, !dbg !75
  store %struct.List* %0, %struct.List** %p, align 8, !dbg !76
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !77
  %2 = load %struct.List*, %struct.List** %p, align 8, !dbg !78
  %x = getelementptr inbounds %struct.List, %struct.List* %2, i32 0, i32 0, !dbg !79
  store i8* %1, i8** %x, align 8, !dbg !80
  %3 = load i8*, i8** %src.addr, align 8, !dbg !81
  %4 = load %struct.List*, %struct.List** %p, align 8, !dbg !82
  %y = getelementptr inbounds %struct.List, %struct.List* %4, i32 0, i32 1, !dbg !83
  store i8* %3, i8** %y, align 8, !dbg !84
  %5 = load %struct.List*, %struct.List** %p, align 8, !dbg !85
  %6 = bitcast %struct.List* %5 to i8*, !dbg !85
  ret i8* %6, !dbg !86
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !87 {
entry:
  %retval = alloca i32, align 4
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %pp = alloca %struct.List*, align 8
  store i32 0, i32* %retval, align 4
  call void @llvm.dbg.declare(metadata i8** %p, metadata !90, metadata !DIExpression()), !dbg !91
  %call = call i8* @NFRMALLOC(i32 10), !dbg !92
  store i8* %call, i8** %p, align 8, !dbg !91
  call void @llvm.dbg.declare(metadata i8** %q, metadata !93, metadata !DIExpression()), !dbg !94
  %call1 = call i8* @NFRMALLOC(i32 10), !dbg !95
  store i8* %call1, i8** %q, align 8, !dbg !94
  call void @llvm.dbg.declare(metadata %struct.List** %pp, metadata !96, metadata !DIExpression()), !dbg !97
  %0 = load i8*, i8** %p, align 8, !dbg !98
  %1 = load i8*, i8** %q, align 8, !dbg !99
  %call2 = call i8* @ra(i8* %0, i8* %1), !dbg !100
  %2 = bitcast i8* %call2 to %struct.List*, !dbg !100
  store %struct.List* %2, %struct.List** %pp, align 8, !dbg !101
  %3 = load %struct.List*, %struct.List** %pp, align 8, !dbg !102
  %4 = ptrtoint %struct.List* %3 to i32, !dbg !102
  ret i32 %4, !dbg !103
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!12, !13, !14, !15, !16}
!llvm.ident = !{!17}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 13.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/sp13.c", directory: "/home/runner/work/Test-Suite/Test-Suite")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!5 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "List", file: !6, line: 11, size: 128, elements: !7)
!6 = !DIFile(filename: "src/mem_leak/sp13.c", directory: "/home/runner/work/Test-Suite/Test-Suite")
!7 = !{!8, !11}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !5, file: !6, line: 12, baseType: !9, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !5, file: !6, line: 13, baseType: !9, size: 64, offset: 64)
!12 = !{i32 7, !"Dwarf Version", i32 4}
!13 = !{i32 2, !"Debug Info Version", i32 3}
!14 = !{i32 1, !"wchar_size", i32 4}
!15 = !{i32 7, !"uwtable", i32 1}
!16 = !{i32 7, !"frame-pointer", i32 2}
!17 = !{!"clang version 13.0.0"}
!18 = distinct !DISubprogram(name: "SAFEMALLOC", scope: !19, file: !19, line: 5, type: !20, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!19 = !DIFile(filename: "memleak_check.h", directory: "/home/runner/work/Test-Suite/Test-Suite")
!20 = !DISubroutineType(types: !21)
!21 = !{!22, !23}
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!23 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!24 = !DILocalVariable(name: "n", arg: 1, scope: !18, file: !19, line: 5, type: !23)
!25 = !DILocation(line: 5, column: 22, scope: !18)
!26 = !DILocation(line: 6, column: 17, scope: !18)
!27 = !DILocation(line: 6, column: 10, scope: !18)
!28 = !DILocation(line: 6, column: 3, scope: !18)
!29 = distinct !DISubprogram(name: "PLKMALLOC", scope: !19, file: !19, line: 9, type: !20, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!30 = !DILocalVariable(name: "n", arg: 1, scope: !29, file: !19, line: 9, type: !23)
!31 = !DILocation(line: 9, column: 21, scope: !29)
!32 = !DILocation(line: 10, column: 17, scope: !29)
!33 = !DILocation(line: 10, column: 10, scope: !29)
!34 = !DILocation(line: 10, column: 3, scope: !29)
!35 = distinct !DISubprogram(name: "NFRMALLOC", scope: !19, file: !19, line: 13, type: !20, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!36 = !DILocalVariable(name: "n", arg: 1, scope: !35, file: !19, line: 13, type: !23)
!37 = !DILocation(line: 13, column: 21, scope: !35)
!38 = !DILocation(line: 14, column: 17, scope: !35)
!39 = !DILocation(line: 14, column: 10, scope: !35)
!40 = !DILocation(line: 14, column: 3, scope: !35)
!41 = distinct !DISubprogram(name: "CLKMALLOC", scope: !19, file: !19, line: 17, type: !20, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!42 = !DILocalVariable(name: "n", arg: 1, scope: !41, file: !19, line: 17, type: !23)
!43 = !DILocation(line: 17, column: 21, scope: !41)
!44 = !DILocation(line: 18, column: 17, scope: !41)
!45 = !DILocation(line: 18, column: 10, scope: !41)
!46 = !DILocation(line: 18, column: 3, scope: !41)
!47 = distinct !DISubprogram(name: "NFRLEAKFP", scope: !19, file: !19, line: 21, type: !20, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!48 = !DILocalVariable(name: "n", arg: 1, scope: !47, file: !19, line: 21, type: !23)
!49 = !DILocation(line: 21, column: 21, scope: !47)
!50 = !DILocation(line: 22, column: 17, scope: !47)
!51 = !DILocation(line: 22, column: 10, scope: !47)
!52 = !DILocation(line: 22, column: 3, scope: !47)
!53 = distinct !DISubprogram(name: "PLKLEAKFP", scope: !19, file: !19, line: 25, type: !20, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!54 = !DILocalVariable(name: "n", arg: 1, scope: !53, file: !19, line: 25, type: !23)
!55 = !DILocation(line: 25, column: 21, scope: !53)
!56 = !DILocation(line: 26, column: 17, scope: !53)
!57 = !DILocation(line: 26, column: 10, scope: !53)
!58 = !DILocation(line: 26, column: 3, scope: !53)
!59 = distinct !DISubprogram(name: "LEAKFN", scope: !19, file: !19, line: 29, type: !20, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!60 = !DILocalVariable(name: "n", arg: 1, scope: !59, file: !19, line: 29, type: !23)
!61 = !DILocation(line: 29, column: 18, scope: !59)
!62 = !DILocation(line: 30, column: 17, scope: !59)
!63 = !DILocation(line: 30, column: 10, scope: !59)
!64 = !DILocation(line: 30, column: 3, scope: !59)
!65 = distinct !DISubprogram(name: "ra", scope: !6, file: !6, line: 16, type: !66, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!66 = !DISubroutineType(types: !67)
!67 = !{!9, !9, !9}
!68 = !DILocalVariable(name: "dst", arg: 1, scope: !65, file: !6, line: 16, type: !9)
!69 = !DILocation(line: 16, column: 18, scope: !65)
!70 = !DILocalVariable(name: "src", arg: 2, scope: !65, file: !6, line: 16, type: !9)
!71 = !DILocation(line: 16, column: 29, scope: !65)
!72 = !DILocalVariable(name: "p", scope: !65, file: !6, line: 17, type: !4)
!73 = !DILocation(line: 17, column: 17, scope: !65)
!74 = !DILocation(line: 18, column: 25, scope: !65)
!75 = !DILocation(line: 18, column: 10, scope: !65)
!76 = !DILocation(line: 18, column: 8, scope: !65)
!77 = !DILocation(line: 19, column: 12, scope: !65)
!78 = !DILocation(line: 19, column: 5, scope: !65)
!79 = !DILocation(line: 19, column: 8, scope: !65)
!80 = !DILocation(line: 19, column: 10, scope: !65)
!81 = !DILocation(line: 20, column: 14, scope: !65)
!82 = !DILocation(line: 20, column: 7, scope: !65)
!83 = !DILocation(line: 20, column: 10, scope: !65)
!84 = !DILocation(line: 20, column: 12, scope: !65)
!85 = !DILocation(line: 21, column: 13, scope: !65)
!86 = !DILocation(line: 21, column: 6, scope: !65)
!87 = distinct !DISubprogram(name: "main", scope: !6, file: !6, line: 24, type: !88, scopeLine: 24, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!88 = !DISubroutineType(types: !89)
!89 = !{!23}
!90 = !DILocalVariable(name: "p", scope: !87, file: !6, line: 25, type: !9)
!91 = !DILocation(line: 25, column: 11, scope: !87)
!92 = !DILocation(line: 25, column: 15, scope: !87)
!93 = !DILocalVariable(name: "q", scope: !87, file: !6, line: 26, type: !9)
!94 = !DILocation(line: 26, column: 13, scope: !87)
!95 = !DILocation(line: 26, column: 17, scope: !87)
!96 = !DILocalVariable(name: "pp", scope: !87, file: !6, line: 27, type: !4)
!97 = !DILocation(line: 27, column: 19, scope: !87)
!98 = !DILocation(line: 28, column: 15, scope: !87)
!99 = !DILocation(line: 28, column: 17, scope: !87)
!100 = !DILocation(line: 28, column: 12, scope: !87)
!101 = !DILocation(line: 28, column: 10, scope: !87)
!102 = !DILocation(line: 29, column: 13, scope: !87)
!103 = !DILocation(line: 29, column: 6, scope: !87)
